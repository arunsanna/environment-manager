swagger: "2.0"
info:
  version: "1.0.0"
  title: Environment Manager API
host: environmentmanager.corp.local
basePath: /api/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /asgs:
    x-swagger-router-controller: asgs/asgController
    get:
      operationId: getAsgs
      summary: List ASGS matching the given criteria. By default returns all ASGs across all accounts.
      tags:
        - ASG
      parameters:
        - name: account
          in: query
          type: string
          required: false
        - name: environment
          in: query
          type: string
          required: false
      responses:
        200:
          description: A list of matching ASGs.
          schema:
            type: array
            items:
              type: object
  /asgs/{name}:
    x-swagger-router-controller: asgs/asgController
    get:
      operationId: getAsgByName
      summary: Get a single ASG for the given environment.
      tags:
        - ASG
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The matching ASG
          schema:
            type: object
    put:
      operationId: putAsg
      summary: Update properties of an ASG.
      tags:
        - ASG
      x-authorizer: asgs
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: Ok
  /asgs/{name}/ips:
    x-swagger-router-controller: asgs/asgController
    get:
      operationId: getAsgIps
      summary: Get IPs associated with an ASG under the given account.
      tags:
        - ASG
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: A list of IPs.
          schema:
            type: array
            items:
              type: object
  /asgs/{name}/scaling-schedule:
    x-swagger-router-controller: asgs/asgController
    get:
      operationId: getScalingSchedule
      summary: Get scaling schedule actions for given ASG.
      tags:
        - ASG
      x-authorizer: asgs
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: Ok
    put:
      operationId: putScalingSchedule
      summary: Update scaling schedule actions for given ASG.
      tags:
        - ASG
      x-authorizer: asgs
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: Ok
  /asgs/{name}/size:
    x-swagger-router-controller: asgs/asgController
    put:
      operationId: putAsgSize
      summary: Resize an ASG under the given account.
      tags:
        - ASG
      x-authorizer: asgs
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: Ok
  /asgs/{name}/launch-config:
    x-swagger-router-controller: asgs/asgController
    get:
      operationId: getAsgLaunchConfig
      summary: Get the launch config associated with an ASG under the given account.
      tags:
        - ASG
      x-authorizer: asgs  
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The launch config
          schema:
            type: object
    put:
      operationId: putAsgLaunchConfig
      summary: Update the launch config associated with an ASG under the given account.
      tags:
        - ASG
      x-authorizer: asgs
      parameters:
        - name: environment
          in: query
          type: string
          required: true
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        200:
          description: ASG launch config.
  /audit:
    x-swagger-router-controller: audit/auditController
    get:
      operationId: getAuditLogs
      summary: Get Audit Logs for a given time period. Default values are 'since yesterday' and 'until now'.
      tags:
        - Audit
      parameters:
        - name: since
          in: query
          type: string
          format: date-time
          required: false
        - name: until
          in: query
          type: string
          format: date-time
          required: false
      responses:
        200:
          description: A list of Audit logs
          schema:
            type: array
            items:
              type: object
  /audit/{key}:
    x-swagger-router-controller: audit/auditController
    get:
      operationId: getAuditLogByKey
      summary: Get a specific audit log.
      tags:
        - Audit
      parameters:
        - name: key
          in: path
          type: string
          required: true
      responses:
        200:
          description: The audit log
          schema:
            type: object
  /deployments:
    x-swagger-router-controller: deployments/deploymentsController
    get:
      operationId: getDeployments
      summary: List all deployments matching the given criteria. If no parameters are provided, the default is 'since yesterday'.
      tags:
        - Deployment
      parameters:
        - name: since
          in: query
          type: string
          required: false
        - name: environment
          in: query
          type: string
          required: false
        - name: status
          in: query
          type: string
          required: false
        - name: cluster
          in: query
          type: string
          required: false
      responses:
        200:
          description: A list of deployments
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postDeployment
      summary: Create a new deployment. This will provision any required infrastructure and update the required target-state.
      tags:
        - Deployment
      x-authorizer: deploy-authorizer
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/Deployment'
      responses:
        202:
          description: The deployment ID
  /deployments/{id}:
    x-swagger-router-controller: deployments/deploymentsController
    get:
      operationId: getDeploymentById
      summary: Get information for a deployment.
      tags:
        - Deployment
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: The deployment
          schema:
            type: object
    patch:
      operationId: patchDeployment
      summary: Cancel an in-progress deployment.
      tags:
        - Deployment
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - Status
            properties:
              Status:
                type: string
      responses:
        200:
          description: OK
  /deployments/{id}/log:
    x-swagger-router-controller: deployments/deploymentsController
    get:
      operationId: getDeploymentLog
      summary: Retrieve logs for a particular deployment.
      tags:
        - Deployment
      parameters:
        - name: account
          in: query
          type: string
          required: true
        - name: instance
          in: query
          type: string
          required: true
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: The deployment log
          schema:
            type: object
  /diagnostics/healthcheck:
    x-swagger-router-controller: diagnostics/diagnosticsController
    get:
      operationId: getHealthcheck
      summary: Get version and status information.
      tags:
        - Status
      responses:
        200:
          description: The current status
          schema:
            type: object
  /environments:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironments
      summary: Get all environments
      tags:
        - Environment
      responses:
        200:
          description: A list of environments
          schema:
            type: array
            items:
              type: object
  /environments/{name}:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironmentByName
      summary: Get an environment.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The environment
          schema:
            type: object
  /environments/{name}/servers:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironmentServers
      summary: Get the list of servers in an environment.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The list of servers
          schema:
            type: array
            items:
              type: object
  /environments/{name}/servers/{asgName}:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironmentServerByName
      summary: Get a specific server in a given environment
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: asgName
          in: path
          type: string
          required: true
      responses:
        200:
          description: The server
          schema:
            type: object
  /environments/{name}/schedule:
    x-swagger-router-controller: environments/environmentsController
    put:
      operationId: putEnvironmentSchedule
      summary: Set the schedule for an environment.
      tags:
        - Environment
      x-authorizer: environments-schedule
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    get:
      operationId: getEnvironmentSchedule
      summary: Get schedule for an environment.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true

      responses:
        200:
          description: The schedule status
          schema:
            type: object
  /environments/{name}/accountName:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironmentAccountName
      summary: Get account name for given environment.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: Account name
          schema:
            type: string
  /environments/{name}/schedule-status:
    x-swagger-router-controller: environments/environmentsController
    get:
      operationId: getEnvironmentScheduleStatus
      summary: Get the schedule status for a given environment at a given time. If no 'at' parameter is provided,
               the current status is returned.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: at
          in: query
          type: string
          format: date-time
          required: false
      responses:
        200:
          description: The schedule status
          schema:
            type: object
  /images:
    x-swagger-router-controller: images/imagesController
    get:
      operationId: getImages
      summary: Get the list of available AMI images. Only those that are privately published under associated accounts are included.
      tags:
        - AMI
      parameters:
        - name: account
          type: string
          in: query
          required: false
      responses:
        200:
          description: The list of AMI images
          schema:
            type: array
            items:
              type: object
  /instances:
    x-swagger-router-controller: instances/instancesController
    get:
      operationId: getInstances
      summary: Get all instances matching the given criteria.
      tags:
        - Instance
      parameters:
        - name: account
          in: query
          type: string
          required: false
        - name: environment
          in: query
          type: string
          required: false
        - name: cluster
          in: query
          type: string
          required: false
        - name: maintenance
          in: query
          type: boolean
          required: false
        - name: ip_address
          in: query
          type: string
          required: false
        - name: instance_id
          in: query
          type: string
          required: false
      responses:
        200:
          description: The list of instances
          schema:
            type: array
            items:
              type: object
  /instances/{id}:
    x-swagger-router-controller: instances/instancesController
    get:
      operationId: getInstanceById
      summary: Get a specific instance.
      tags:
        - Instance
      parameters:
        - name: id
          in: path
          type: string
          required: true
      responses:
        200:
          description: The instance
          schema:
            type: object
  /instances/{id}/maintenance:
    x-swagger-router-controller: instances/instancesController
    put:
      operationId: putInstanceMaintenance
      summary: Update the ASG standby-state of a given instance.
      tags:
        - Instance
      parameters:
        - name: id
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: false
          schema:
            type: object
      responses:
        200:
          description: OK
  /services:
    x-swagger-router-controller: services/servicesController
    get:
      operationId: getServices
      summary: Get the list of currently deployed services.
      description: This differs from `/deployment/target-states` in that it lists the *current* services and versions
                   that are deployed.
      tags:
        - Service
      parameters:
        - name: environment
          in: query
          type: array
          collectionFormat: csv
          required: true
          items:
            type: string
      responses:
        200:
          description: Currently deployed services
          schema:
            type: array
            items:
              type: object
  /services/{service}:
    x-swagger-router-controller: services/servicesController
    get:
      operationId: getServiceById
      summary: Get a currently deployed service.
      tags:
        - Service
      parameters:
        - name: service
          in: path
          type: string
          required: true
        - name: environment
          in: query
          type: array
          collectionFormat: csv
          required: true
          items:
            type: string
      responses:
        200:
          description: The service
          schema:
            type: object
  /services/{service}/slices:
    x-swagger-router-controller: services/servicesController
    get:
      operationId: getServiceSlices
      summary: Get slices for a deployed service.
      tags:
        - Service
      parameters:
        - name: service
          in: path
          type: string
          required: true
        - name: environment
          in: query
          type: string
          required: true
        - name: active
          in: query
          type: boolean
          required: false
      responses:
        200:
          description: The slices
          schema:
            type: array
            items:
              type: object
  /services/{service}/slices/toggle:
    x-swagger-router-controller: services/servicesController
    put:
      operationId: putServiceSlicesToggle
      summary: Toggle the slices for a deployed service.
      tags:
        - Service
      parameters:
        - name: service
          in: path
          type: string
          required: true
        - name: environment
          in: query
          type: string
          required: true
      responses:
        200:
          description: OK
  /target-state/{environment}:
    x-swagger-router-controller: target-state/targetStateController
    get:
      operationId: getTargetState
      summary: Get the target state for a given environment
      description: The desired or "target" state for an environment represents service versions that "should"
                   be deployed across an environment.
      tags:
        - Target State
      parameters:
        - name: environment
          in: path
          type: string
          required: true
        - name: serverRole
          in: query
          type: string
          required: false
      responses:
        200:
          description: The list of service versions that should be deployed to an environment.
          schema:
            type: array
            items:
              type: object
    delete:
      operationId: deleteTargetStateByEnvironment
      summary: Remove the target state for all services in a given environment.
      tags:
        - Target State
      parameters:
        - name: environment
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /target-state/{environment}/{service}:
    x-swagger-router-controller: target-state/targetStateController
    delete:
      operationId: deleteTargetStateByService
      summary: Remove the target state for all versions of a service.
      tags:
        - Target State
      parameters:
        - name: environment
          in: path
          type: string
          required: true
        - name: service
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /target-state/{environment}/{service}/{version}:
    x-swagger-router-controller: target-state/targetStateController
    delete:
      operationId: deleteTargetStateByServiceVersion
      summary: Remove the target state for a specific version of a service.
      tags:
        - Target State
      parameters:
        - name: environment
          in: path
          type: string
          required: true
        - name: service
          in: path
          type: string
          required: true
        - name: version
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /token:
    x-swagger-router-controller: token/tokenController
    post:
      operationId: postAuthorization
      summary: Get an authorization token
      description: "Tokens are required for all authenticated API routes. Tokens obtained from this endpoint should be
                   used in the header of all subsequent requests as `Authorization: Bearer <token>`"
      tags:
        - Authentication
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        200:
          description: An authorization token
          schema:
            type: string
  /upstreams/{name}/slices:
    x-swagger-router-controller: upstreams/upstreamsController
    get:
      operationId: getUpstreamSlices
      summary: Get slices for a given upstream.
      tags:
        - Upstream
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: environment
          in: query
          type: string
          required: true
        - name: active
          in: query
          type: boolean
          required: false
      responses:
        200:
          description: The slices
          schema:
            type: array
            items:
              type: object
  /upstreams/{name}/slices/toggle:
    x-swagger-router-controller: upstreams/upstreamsController
    put:
      operationId: putUpstreamSlicesToggle
      summary: Toggle the slices for a given upstream
      tags:
        - Upstream
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: environment
          in: query
          type: string
          required: true
      responses:
        200:
          description: OK
  /config/accounts:
    x-swagger-router-controller: config/accounts/accountsController
    get:
      operationId: getAccountsConfig
      summary: List the AWS Accounts that associated with Environment Manager.
      tags:
        - Accounts
      responses:
        200:
          description: The list of accounts
          schema:
            type: array
            items:
              $ref: '#/definitions/AccountConfig'
    post:
      operationId: postAccountsConfig
      summary: Add an association to an AWS Account.
      parameters:
        - name: account
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountConfig'
      tags:
        - Accounts
      responses:
        201:
          description: OK
  /config/accounts/{accountNumber}:
    x-swagger-router-controller: config/accounts/accountsController
    put:
      operationId: putAccountConfigByName
      summary: Update an associated AWS Account.
      tags:
        - Accounts
      parameters:
        - name: accountNumber
          type: integer
          required: true
          in: path
        - name: account
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccountConfig'
      responses:
        200:
          description: OK
    delete:
      operationId: deleteAccountConfigByName
      summary: Remove an AWS Account association.
      tags:
        - Accounts
      parameters:
        - name: accountNumber
          type: integer
          required: true
          in: path
      responses:
        200:
          description: OK
  /config/clusters:
    x-swagger-router-controller: config/clusters/clusterController
    get:
      operationId: getClustersConfig
      summary: Get all Cluster configurations.
      tags:
        - Cluster
      responses:
        200:
          description: The list of Cluster configs
          schema:
            type: array
            items:
              $ref: '#/definitions/ClusterConfig'
    post:
      operationId: postClustersConfig
      summary: Create a Cluster configuration.
      tags:
        - Cluster
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClusterConfig'
      responses:
        201:
          description: OK
  /config/clusters/{name}:
    x-swagger-router-controller: config/clusters/clusterController
    get:
      operationId: getClusterConfigByName
      summary: Get a specific Cluster configuration.
      tags:
        - Cluster
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The Cluster config
          schema:
            $ref: '#/definitions/ClusterConfig'
    put:
      operationId: putClusterConfigByName
      summary: Update a Cluster configuration.
      tags:
        - Cluster
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/ClusterConfigValue'
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    delete:
      operationId: deleteClusterConfigByName
      summary: Delete a Cluster configuration.
      tags:
        - Cluster
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /config/deployment-maps:
    x-swagger-router-controller: config/deployment-maps/deploymentMapController
    get:
      operationId: getDeploymentMapsConfig
      summary: Get all deployment map configurations.
      tags:
        - Deployment Map
      responses:
        200:
          description: The list of deployment maps
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postDeploymentMapsConfig
      summary: Create a deployment map configuration
      tags:
        - Deployment Map
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/deployment-maps/{name}:
    x-swagger-router-controller: config/deployment-maps/deploymentMapController
    put:
      operationId: putDeploymentMapConfigByName
      summary: Update a deployment map configuration.
      tags:
        - Deployment Map
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    get:
      operationId: getDeploymentMapConfigByName
      summary: Get a specific deployment map configuration.
      tags:
        - Deployment Map
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The deployment map config
          schema:
            type: object
    delete:
      operationId: deleteDeploymentMapConfigByName
      summary: Delete a deployment map configuration.
      tags:
        - Deployment Map
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /config/environments:
    x-swagger-router-controller: config/environments/environmentsConfigController
    get:
      operationId: getEnvironmentsConfig
      summary: Get all environment configurations.
      tags:
        - Environment
      parameters:
        - name: environmentType
          in: query
          type: string
          required: false
        - name: cluster
          in: query
          required: false
          type: string
      responses:
        200:
          description: The list of environment configs
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postEnvironmentsConfig
      summary: Create a new environment configuration.
      tags:
        - Environment
      x-authorizer: environments
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/environments/{name}:
    x-swagger-router-controller: config/environments/environmentsConfigController
    get:
      operationId: getEnvironmentConfigByName
      summary: Get a specific environment configuration.
      tags:
        - Environment
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: The environment config
          schema:
            type: object
    put:
      operationId: putEnvironmentConfigByName
      summary: Update an environment configuration.
      tags:
        - Environment
      x-authorizer: environments
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    delete:
      operationId: deleteEnvironmentConfigByName
      summary: Delete an environment configuration.
      tags:
        - Environment
      x-authorizer: environments
      parameters:
        - name: name
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
  /config/environment-types:
    x-swagger-router-controller: config/environment-types/environmentTypeController
    get:
      operationId: getEnvironmentTypesConfig
      summary: Get all environment type configurations.
      tags:
        - Environment Type
      responses:
        200:
          description: The list of environment type configs
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postEnvironmentTypesConfig
      summary: Create an Environment Type configuration.
      tags:
        - Environment Type
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/environment-types/{name}:
    x-swagger-router-controller: config/environment-types/environmentTypeController
    get:
      operationId: getEnvironmentTypeConfigByName
      summary: Get an specific environment type configuration.
      tags:
        - Environment Type
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: The environment type config
          schema:
            type: object
    put:
      operationId: putEnvironmentTypeConfigByName
      summary: Update an environment type configuration.
      tags:
        - Environment Type
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    delete:
      operationId: deleteEnvironmentTypeConfigByName
      summary: Delete an environment type.
      tags:
        - Environment Type
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
  /config/export/{resource}:
    x-swagger-router-controller: config/export/exportController
    get:
      operationId: getResourceExport
      summary: Export a configuration resources dynamo table.
      tags:
        - Export
      parameters:
        - name: account
          in: query
          required: false
          type: string
        - name: resource
          description: The name of the resource you want to export
          in: path
          type: string
          enum:
            - accounts
            - clusters
            - deploymentmaps
            - environments
            - environmenttypes
            - lbsettings
            - permissions
            - services
            - lbupstream
          required: true
      responses:
        200:
          description: The dynamo table export
          schema:
            type: array
            items:
              type: object
  /config/import/{resource}:
    x-swagger-router-controller: config/import/importController
    put:
      operationId: putResourceImport
      summary: Import a configuration resources dynamo table.
      tags:
        - Import
      parameters:
        - name: resource
          description: The name of the resource you want to import
          in: path
          type: string
          enum:
            - accounts
            - clusters
            - deploymentmaps
            - environments
            - environmenttypes
            - lbsettings
            - permissions
            - services
            - lbupstream
          required: true
        - name: data
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
        - name: mode
          in: query
          required: true
          type: string
        - name: account
          in: query
          required: false
          type: string
      responses:
        200:
          description: OK
  /config/lb-settings:
    x-swagger-router-controller: config/lb-settings/lbSettingsController
    get:
      operationId: getLBSettingsConfig
      summary: List all load balancer settings.
      tags:
        - Load Balancers
      parameters:
        - name: environment
          in: query
          required: false
          type: string
        - name: frontend
          in: query
          required: false
          type: string
      responses:
        200:
          description: The list of load balancer settings
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postLBSettingsConfig
      summary: Create a load balancer setting.
      tags:
        - Load Balancers
      x-authorizer: load-balancer-settings
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/lb-settings/{environment}/{vHostName}:
    x-swagger-router-controller: config/lb-settings/lbSettingsController
    get:
      operationId: getLBSettingConfigByName
      summary: Get a specific load balancer setting.
      tags:
        - Load Balancers
      parameters:
        - name: environment
          in: path
          required: true
          type: string
        - name: vHostName
          in: path
          required: true
          type: string
      responses:
        200:
          description: The load balancer setting
          schema:
            type: object
    put:
      operationId: putLBSettingConfigByName
      summary: Update a load balancer setting.
      tags:
        - Load Balancers
      x-authorizer: load-balancer-settings
      parameters:
        - name: environment
          in: path
          required: true
          type: string
        - name: vHostName
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    delete:
      operationId: deleteLBSettingConfigByName
      summary: Delete an load balancer setting.
      tags:
        - Load Balancers
      x-authorizer: load-balancer-settings
      parameters:
        - name: environment
          in: path
          required: true
          type: string
        - name: vHostName
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
  /config/permissions:
    x-swagger-router-controller: config/permissions/permissionsController
    get:
      operationId: getPermissionsConfig
      summary: Get all permission configurations.
      tags:
        - Permissions
      responses:
        200:
          description: List of permission configs
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postPermissionsConfig
      summary: Create a new permission configuration.
      tags:
        - Permissions
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/permissions/{name}:
    x-swagger-router-controller: config/permissions/permissionsController
    get:
      operationId: getPermissionConfigByName
      summary: Get a specific permission configuration.
      tags:
        - Permissions
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: The permission config
          schema:
            type: object
    put:
      operationId: putPermissionConfigByName
      summary: Update a permission configuration.
      tags:
        - Permissions
      parameters:
        - name: name
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    delete:
      operationId: deletePermissionConfigByName
      summary: Delete a permissions configuration.
      description: This will delete the permission config and optionally update any other configs or settings that depend on it.
      tags:
        - Permissions
      parameters:
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: OK
  /config/services:
    x-swagger-router-controller: config/services/servicesConfigController
    get:
      operationId: getServicesConfig
      summary: Get all service configurations.
      tags:
        - Service
      parameters:
        - name: cluster
          in: query
          required: false
          type: string
      responses:
        200:
          description: The list of service configs
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postServicesConfig
      summary: Create a service configuration
      tags:
        - Service
      x-authorizer: services
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/services/{name}/{cluster}:
    x-swagger-router-controller: config/services/servicesConfigController
    get:
      operationId: getServiceConfigByName
      summary: Get a specific service configuration.
      tags:
        - Service
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: cluster
          in: path
          type: string
          required: true
      responses:
        200:
          description: The service config
          schema:
            type: object
    delete:
      operationId: deleteServiceConfigByName
      summary: Delete a service configuration.
      tags:
        - Service
      x-authorizer: services
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: cluster
          in: path
          type: string
          required: true
      responses:
        200:
          description: OK
    put:
      operationId: putServiceConfigByName
      summary: Update a service configuration.
      tags:
        - Service
      x-authorizer: services
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: cluster
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
  /config/upstreams:
    x-swagger-router-controller: config/upstreams/upstreamsConfigController
    get:
      operationId: getUpstreamsConfig
      summary: Get all upstream configurations.
      tags:
        - Upstream
      responses:
        200:
          description: The list of upstream configs
          schema:
            type: array
            items:
              type: object
    post:
      operationId: postUpstreamsConfig
      summary: Create an upsteram configuration.
      tags:
        - Upstream
      x-authorizer: upstreams
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
      responses:
        201:
          description: OK
  /config/upstreams/{name}:
    x-swagger-router-controller: config/upstreams/upstreamsConfigController
    put:
      operationId: putUpstreamConfigByName
      summary: Update an upstream configuration.
      tags:
        - Upstream
      x-authorizer: upstreams
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: body
          in: body
          required: true
          schema:
            type: object
        - $ref: '#/parameters/ExpectedVersionHeader'
      responses:
        200:
          description: OK
    get:
      operationId: getUpstreamConfigByName
      summary: Get an a specific upstream configuration
      tags:
        - Upstream
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: account
          in: query
          type: string
          required: true
      responses:
        200:
          description: The upstream config
          schema:
            type: object
    delete:
      operationId: deleteUpstreamConfigByName
      summary: Delete an upstream configuration.
      tags:
        - Upstream
      x-authorizer: upstreams
      parameters:
        - name: name
          in: path
          type: string
          required: true
        - name: account
          in: query
          type: string
          required: true
      responses:
        200:
          description: Empty
  /package-upload-url/{service}/{version}/{environment}:
    x-swagger-router-controller: package-upload-url/packageUploadUrlController
    get:
      operationId: getPackageUploadUrlByServiceVersionEnvironment
      summary: Upload an environment-specific package.
      x-authorizer: package-upload-url
      tags:
        - Package
      parameters:
        - $ref: '#/parameters/package-id'
        - $ref: '#/parameters/package-version'
        - $ref: '#/parameters/package-environment'
        - $ref: '#/parameters/package-slice'
      responses:
        201:
          $ref: '#/responses/package-created'
        409:
          $ref: '#/responses/package-already-exists'
        422:
          $ref: '#/responses/package-bad-ref'
  /package-upload-url/{service}/{version}:
    x-swagger-router-controller: package-upload-url/packageUploadUrlController
    get:
      operationId: getPackageUploadUrlByServiceVersion
      summary: Upload an environment-independent package.
      x-authorizer: package-upload-url
      tags:
        - Package
      parameters:
        - $ref: '#/parameters/package-id'
        - $ref: '#/parameters/package-version'
      responses:
        201:
          $ref: '#/responses/package-created'
        409:
          $ref: '#/responses/package-already-exists'
        422:
          $ref: '#/responses/package-bad-ref'
definitions:
  AccountConfig:
    type: object
    required:
      - AccountName
      - AccountNumber
      - IsProd
      - IsMaster
      - Impersonate
    properties:
      AccountName:
        type: string
      AccountNumber:
        type: integer
      IsProd:
        type: boolean
      IsMaster:
        type: boolean
      Impersonate:
        type: boolean
      RoleArn:
        type: string
  ClusterConfig:
    type: object
    required:
      - ClusterName
      - Value
    properties:
      ClusterName:
        type: string
      Value:
        $ref: '#/definitions/ClusterConfigValue'
  ClusterConfigValue:
    type: object
    required:
      - ShortName
      - SchemaVersion
    properties:
      ShortName:
        type: string
      SchemaVersion:
        type: integer
      GroupEmailAddress:
        type: string
      ADMembershipGroup:
        type: string
  Deployment:
    type: object
    required:
      - environment
      - service
      - version
      - packageLocation
    properties:
      environment:
        type: string
      service:
        type: string
      version:
        type: string
      mode:
        type: string
        enum:
          - bg
          - overwrite
      slice:
        type: string
        enum:
          - blue
          - green
          - none
      packageLocation:
        type: string
      serverRole:
        type: string
  Error:
    type: object
    readOnly: true
    properties:
      title:
        type: string
        description: A short, human readable title of the error.
      description:
        type: string
        description: A long, human readable description of the error.
parameters:
  ExpectedVersionHeader:
    name: expected-version
    in: header
    required: true
    type: integer
  package-id:
    name: service
    description: The name of the service implemented by the package.
    in: path
    type: string
    pattern: ^[A-Za-z0-9_\-\.]+$
    required: true
  package-version:
    name: version
    description: The version of the package (semver).
    in: path
    required: true
    type: string
    pattern: (0|[1-9]\d*)(\.(0|[1-9]\d*)){2}(-[\da-zA-Z\-]+(\.[\da-zA-Z\-]+)*)?(\+[\da-zA-Z\-]+(\.[\da-zA-Z\-]+)*)?
  package-environment:
    name: environment
    description: The name of the environment targeted by this package.
    in: path
    type: string
    pattern: ^[A-Za-z0-9]+$
    required: true
  package-slice:
    name: slice
    description: The name of the slice targeted by this package.
    in: formData
    type: string
    enum:
      - blue
      - green
    required: false
  package-content:
    name: package
    description: The package file.
    in: formData
    type: file
    required: true
responses:
  package-created:
    description: The package was uploaded successfully.
  package-already-exists:
    description: The package already exists.
    schema:
      $ref: '#/definitions/Error'
  package-bad-ref:
    description: The package refers to a service or environment that does not exist.
    schema:
      $ref: '#/definitions/Error'
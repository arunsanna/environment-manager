{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Environment Manager Resources",
    "Parameters": {
        "pLambdaFunctionBucket": {
            "Type": "String",
            "Description": "S3 Bucket containing code for Lambda functions",
            "Default": "lambda.trainline.com",
            "MinLength": "0"
        },
        "pVpc": {
            "Type": "AWS::EC2::VPC::Id",
            "Description": "VPC ID, syntax vpc-xxxxxxxx"
        },
        "pSubnets": {
            "Type": "List<AWS::EC2::Subnet::Id>",
            "Description": "Environment Manager Subnets"
        }
    },
    "Conditions": {},
    "Resources": {
        "tableConfigLBUpstream": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "AttributeDefinitions": [
                    {
                        "AttributeName": "key",
                        "AttributeType": "S"
                    }
                ],
                "KeySchema": [
                    {
                        "AttributeName": "key",
                        "KeyType": "HASH"
                    }
                ],
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 10,
                    "WriteCapacityUnits": 2
                },
                "StreamSpecification": {
                    "StreamViewType": "NEW_AND_OLD_IMAGES"
                }
            }
        },
        "policyReadEnvironmentManagerTables": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Allows read access to Environment Manager DynamoDB Tables and Streams",
                "Path": "/EnvironmentManager/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:GetRecords",
                                "dynamodb:GetShardIterator",
                                "dynamodb:DescribeStream",
                                "dynamodb:ListStreams"
                            ],
                            "Resource": [
                                {
                                    "Fn::GetAtt": [
                                        "tableConfigLBUpstream",
                                        "StreamArn"
                                    ]
                                }
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:BatchGetItem",
                                "dynamodb:Describe*",
                                "dynamodb:Get*",
                                "dynamodb:List*",
                                "dynamodb:Query",
                                "dynamodb:Scan"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableConfigLBUpstream}"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "policyWriteEnvironmentManagerTables": {
            "Type": "AWS::IAM::ManagedPolicy",
            "Properties": {
                "Description": "Allows read access to Environment Manager DynamoDB Tables and Streams",
                "Path": "/EnvironmentManager/",
                "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "dynamodb:BatchWriteItem",
                                "dynamodb:DeleteItem",
                                "dynamodb:PutItem",
                                "dynamodb:UpdateItem"
                            ],
                            "Resource": [
                                {
                                    "Fn::Sub": "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tableConfigLBUpstream}"
                                }
                            ]
                        }
                    ]
                }
            }
        },
        "roleInfraEnvironmentManagerCache": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": "lambda.amazonaws.com"
                            },
                            "Action": "sts:AssumeRole"
                        }
                    ]
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
                    "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
                    {
                        "Ref": "policyReadEnvironmentManagerTables"
                    }
                ]
            }
        },
        "stackRedis": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "pVpcBase": {
                        "Ref": "pVpc"
                    },
                    "pRedisSubnets": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "pSubnets"
                            }
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://s3-${AWS::Region}.amazonaws.com/${pLambdaFunctionBucket}/EnvironmentManager/EnvironmentManagerRedis.template"
                },
                "TimeoutInMinutes": 10
            }
        },
        "stackReplicateDynamoDbStreamRedis": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "pLambdaFunctionBucket": {
                        "Ref": "pLambdaFunctionBucket"
                    },
                    "pRedisAddress": {
                        "Fn::GetAtt": [
                            "stackRedis",
                            "Outputs.RedisAddress"
                        ]
                    },
                    "pRedisPort": {
                        "Fn::GetAtt": [
                            "stackRedis",
                            "Outputs.RedisPort"
                        ]
                    },
                    "pRedisAccessSecurityGroups": {
                        "Fn::GetAtt": [
                            "stackRedis",
                            "Outputs.RedisSecurityGroup"
                        ]
                    },
                    "pRedisSubnets": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "pSubnets"
                            }
                        ]
                    },
                    "pLambdaFunctionExecutionRoleArn": {
                        "Fn::GetAtt": [
                            "roleInfraEnvironmentManagerCache",
                            "Arn"
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": "https://s3-${AWS::Region}.amazonaws.com/${pLambdaFunctionBucket}/EnvironmentManager/ReplicateDynamoDbStreamRedis.template"
                },
                "TimeoutInMinutes": 3
            }
        },
        "triggerReplicateDynamoDbStreamRedisTableConfigLBUpstream": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "Properties": {
                "BatchSize": 10,
                "Enabled": true,
                "EventSourceArn": {
                    "Fn::GetAtt": [
                        "tableConfigLBUpstream",
                        "StreamArn"
                    ]
                },
                "FunctionName": {
                    "Fn::GetAtt": [
                        "stackReplicateDynamoDbStreamRedis",
                        "Outputs.ReplicateFunctionArn"
                    ]
                },
                "StartingPosition": "LATEST"
            }
        }
    },
    "Outputs": {
        "tableConfigLBUpstreamTable": {
            "Description": "Load balancer upstream configuration table",
            "Value": {
                "Ref": "tableConfigLBUpstream"
            }
        },
        "tableConfigLBUpstreamStream": {
            "Description": "Load balancer upstream configuration table",
            "Value": {
                "Fn::GetAtt": [
                    "tableConfigLBUpstream",
                    "StreamArn"
                ]
            }
        },
        "readEnvironmentManagerTablesPolicyArn": {
            "Description": "Policy allows read Environment Manager tables and streams",
            "Value": {
                "Ref": "policyReadEnvironmentManagerTables"
            }
        }
    }
}